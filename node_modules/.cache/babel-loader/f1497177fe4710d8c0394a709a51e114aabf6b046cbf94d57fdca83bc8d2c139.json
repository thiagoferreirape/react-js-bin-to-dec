{"ast":null,"code":"import { setOps, setResult, clearValue, getValores } from \"../actions/calc/calcSlice\";\nexport const resultValue = valores => dispatch => {\n  let binArr = valores.split(\"\");\n  let decArr = [];\n  console.log(binArr);\n  for (let i = 0; i < binArr.length; i++) {\n    let dec = 2 ** i;\n    decArr.push(dec);\n  }\n  let decVal = 0;\n  decArr.reverse().forEach((element, index) => {\n    console.log(element);\n    decVal += binArr[index] === \"0\" ? 0 : element;\n  });\n  dispatch(setResult(decVal.toString()));\n  dispatch(setOps(\"result\"));\n  console.log(decArr.reverse());\n};\nexport const handleActions = val => dispatch => {\n  switch (val) {\n    case \"AC\":\n      console.log(\"clear\");\n      dispatch(clearValue());\n      break;\n    case \"=\":\n      dispatch(resultValue(val));\n      break;\n    default:\n    //   if (current === \"result\") {\n    //     dispatch(clearValue(\"\"));\n    //     dispatch(setOps(\"\"));\n    //     dispatch(setVal(val));\n    //   } else {\n    //     dispatch(setVal(val));\n    //   }\n  }\n};","map":{"version":3,"names":["setOps","setResult","clearValue","getValores","resultValue","valores","dispatch","binArr","split","decArr","console","log","i","length","dec","push","decVal","reverse","forEach","element","index","toString","handleActions","val"],"sources":["/srv/react-docker/src/utils/index.js"],"sourcesContent":["import {\n  setOps,\n  setResult,\n  clearValue,\n  getValores,\n} from \"../actions/calc/calcSlice\";\n\nexport const resultValue = (valores) => (dispatch) => {\n  let binArr = valores.split(\"\");\n  let decArr = [];\n  console.log(binArr);\n\n  for (let i = 0; i < binArr.length; i++) {\n    let dec = 2 ** i;\n    decArr.push(dec);\n  }\n\n  let decVal = 0;\n\n  decArr.reverse().forEach((element, index) => {\n    console.log(element);\n    decVal += binArr[index] === \"0\" ? 0 : element;\n  });\n\n  dispatch(setResult(decVal.toString()));\n  dispatch(setOps(\"result\"));\n  console.log(decArr.reverse());\n};\n\nexport const handleActions = (val) => (dispatch) => {\n  switch (val) {\n    case \"AC\":\n      console.log(\"clear\");\n      dispatch(clearValue());\n      break;\n    case \"=\":\n      dispatch(resultValue(val));\n      break;\n    default:\n    //   if (current === \"result\") {\n    //     dispatch(clearValue(\"\"));\n    //     dispatch(setOps(\"\"));\n    //     dispatch(setVal(val));\n    //   } else {\n    //     dispatch(setVal(val));\n    //   }\n  }\n};\n"],"mappings":"AAAA,SACEA,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,UAAU,QACL,2BAA2B;AAElC,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAMC,QAAQ,IAAK;EACpD,IAAIC,MAAM,GAAGF,OAAO,CAACG,KAAK,CAAC,EAAE,CAAC;EAC9B,IAAIC,MAAM,GAAG,EAAE;EACfC,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EAEnB,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,MAAM,CAACM,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAIE,GAAG,GAAG,CAAC,IAAIF,CAAC;IAChBH,MAAM,CAACM,IAAI,CAACD,GAAG,CAAC;EAClB;EAEA,IAAIE,MAAM,GAAG,CAAC;EAEdP,MAAM,CAACQ,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAC3CV,OAAO,CAACC,GAAG,CAACQ,OAAO,CAAC;IACpBH,MAAM,IAAIT,MAAM,CAACa,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAGD,OAAO;EAC/C,CAAC,CAAC;EAEFb,QAAQ,CAACL,SAAS,CAACe,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtCf,QAAQ,CAACN,MAAM,CAAC,QAAQ,CAAC,CAAC;EAC1BU,OAAO,CAACC,GAAG,CAACF,MAAM,CAACQ,OAAO,CAAC,CAAC,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMK,aAAa,GAAIC,GAAG,IAAMjB,QAAQ,IAAK;EAClD,QAAQiB,GAAG;IACT,KAAK,IAAI;MACPb,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBL,QAAQ,CAACJ,UAAU,CAAC,CAAC,CAAC;MACtB;IACF,KAAK,GAAG;MACNI,QAAQ,CAACF,WAAW,CAACmB,GAAG,CAAC,CAAC;MAC1B;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}