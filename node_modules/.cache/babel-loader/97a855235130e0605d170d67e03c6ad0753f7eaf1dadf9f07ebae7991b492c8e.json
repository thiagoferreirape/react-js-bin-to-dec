{"ast":null,"code":"import { setOps, setResult, clearValue, getValores, setVal, setLastOps } from \"../actions/calc/calcSlice\";\nimport { useSelector } from \"react-redux\";\nexport const resultValue = valores => dispatch => {\n  let binArr = valores.split(\"\");\n  let decArr = [];\n  for (let i = 0; i < binArr.length; i++) {\n    let dec = 2 ** i;\n    decArr.push(dec);\n  }\n  let decVal = 0;\n  decArr.reverse().forEach((element, index) => {\n    decVal += binArr[index] === \"0\" ? 0 : element;\n  });\n  dispatch(setResult(decVal.toString()));\n  dispatch(setOps(\"result\"));\n  dispatch(setLastOps(binArr));\n};\nexport const handleActions = val => (dispatch, getState) => {\n  switch (val) {\n    case \"AC\":\n      dispatch(clearValue());\n      break;\n    case \"=\":\n      dispatch(resultValue(getState().calc.value));\n      break;\n    default:\n      if (getState().calc.current_ops === \"result\") {\n        dispatch(clearValue(\"\"));\n        dispatch(setOps(\"\"));\n        dispatch(setVal(val));\n      } else {\n        dispatch(setVal(val));\n      }\n  }\n};","map":{"version":3,"names":["setOps","setResult","clearValue","getValores","setVal","setLastOps","useSelector","resultValue","valores","dispatch","binArr","split","decArr","i","length","dec","push","decVal","reverse","forEach","element","index","toString","handleActions","val","getState","calc","value","current_ops"],"sources":["/srv/react-docker/src/utils/index.js"],"sourcesContent":["import {\n  setOps,\n  setResult,\n  clearValue,\n  getValores,\n  setVal,\n  setLastOps,\n} from \"../actions/calc/calcSlice\";\nimport { useSelector } from \"react-redux\";\n\nexport const resultValue = (valores) => (dispatch) => {\n  let binArr = valores.split(\"\");\n  let decArr = [];\n\n  for (let i = 0; i < binArr.length; i++) {\n    let dec = 2 ** i;\n    decArr.push(dec);\n  }\n\n  let decVal = 0;\n\n  decArr.reverse().forEach((element, index) => {\n    decVal += binArr[index] === \"0\" ? 0 : element;\n  });\n\n  dispatch(setResult(decVal.toString()));\n  dispatch(setOps(\"result\"));\n  dispatch(setLastOps(binArr));\n};\n\nexport const handleActions = (val) => (dispatch, getState) => {\n  switch (val) {\n    case \"AC\":\n      dispatch(clearValue());\n      break;\n    case \"=\":\n      dispatch(resultValue(getState().calc.value));\n      break;\n    default:\n      if (getState().calc.current_ops === \"result\") {\n        dispatch(clearValue(\"\"));\n        dispatch(setOps(\"\"));\n        dispatch(setVal(val));\n      } else {\n        dispatch(setVal(val));\n      }\n  }\n};\n"],"mappings":"AAAA,SACEA,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,UAAU,EACVC,MAAM,EACNC,UAAU,QACL,2BAA2B;AAClC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAMC,QAAQ,IAAK;EACpD,IAAIC,MAAM,GAAGF,OAAO,CAACG,KAAK,CAAC,EAAE,CAAC;EAC9B,IAAIC,MAAM,GAAG,EAAE;EAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAIE,GAAG,GAAG,CAAC,IAAIF,CAAC;IAChBD,MAAM,CAACI,IAAI,CAACD,GAAG,CAAC;EAClB;EAEA,IAAIE,MAAM,GAAG,CAAC;EAEdL,MAAM,CAACM,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAC3CJ,MAAM,IAAIP,MAAM,CAACW,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAGD,OAAO;EAC/C,CAAC,CAAC;EAEFX,QAAQ,CAACR,SAAS,CAACgB,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtCb,QAAQ,CAACT,MAAM,CAAC,QAAQ,CAAC,CAAC;EAC1BS,QAAQ,CAACJ,UAAU,CAACK,MAAM,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMa,aAAa,GAAIC,GAAG,IAAK,CAACf,QAAQ,EAAEgB,QAAQ,KAAK;EAC5D,QAAQD,GAAG;IACT,KAAK,IAAI;MACPf,QAAQ,CAACP,UAAU,CAAC,CAAC,CAAC;MACtB;IACF,KAAK,GAAG;MACNO,QAAQ,CAACF,WAAW,CAACkB,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC;MAC5C;IACF;MACE,IAAIF,QAAQ,CAAC,CAAC,CAACC,IAAI,CAACE,WAAW,KAAK,QAAQ,EAAE;QAC5CnB,QAAQ,CAACP,UAAU,CAAC,EAAE,CAAC,CAAC;QACxBO,QAAQ,CAACT,MAAM,CAAC,EAAE,CAAC,CAAC;QACpBS,QAAQ,CAACL,MAAM,CAACoB,GAAG,CAAC,CAAC;MACvB,CAAC,MAAM;QACLf,QAAQ,CAACL,MAAM,CAACoB,GAAG,CAAC,CAAC;MACvB;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}