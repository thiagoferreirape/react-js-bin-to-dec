{"ast":null,"code":"import { setOps, setResult, clearValue, getValores, setVal } from \"../actions/calc/calcSlice\";\nimport { useSelector } from \"react-redux\";\nexport const resultValue = valores => dispatch => {\n  let binArr = valores.split(\"\");\n  let decArr = [];\n  for (let i = 0; i < binArr.length; i++) {\n    let dec = 2 ** i;\n    decArr.push(dec);\n  }\n  let decVal = 0;\n  decArr.reverse().forEach((element, index) => {\n    decVal += binArr[index] === \"0\" ? 0 : element;\n  });\n  dispatch(setResult(decVal.toString()));\n  dispatch(setOps(\"result\"));\n};\nexport const handleActions = val => {\n  var _s = $RefreshSig$();\n  return _s(dispatch => {\n    _s();\n    switch (val) {\n      case \"AC\":\n        dispatch(clearValue());\n        break;\n      case \"=\":\n        console.log(useSelector(getValores));\n        dispatch(resultValue(val));\n        break;\n      default:\n        dispatch(setVal(val));\n      //   if (current === \"result\") {\n      //     dispatch(clearValue(\"\"));\n      //     dispatch(setOps(\"\"));\n      //     dispatch(setVal(val));\n      //   } else {\n      //     dispatch(setVal(val));\n      //   }\n    }\n  }, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n    return [useSelector];\n  });\n};","map":{"version":3,"names":["setOps","setResult","clearValue","getValores","setVal","useSelector","resultValue","valores","dispatch","binArr","split","decArr","i","length","dec","push","decVal","reverse","forEach","element","index","toString","handleActions","val","_s","$RefreshSig$","console","log"],"sources":["/srv/react-docker/src/utils/index.js"],"sourcesContent":["import {\n  setOps,\n  setResult,\n  clearValue,\n  getValores,\n  setVal,\n} from \"../actions/calc/calcSlice\";\nimport { useSelector } from \"react-redux\";\n\nexport const resultValue = (valores) => (dispatch) => {\n  let binArr = valores.split(\"\");\n  let decArr = [];\n\n  for (let i = 0; i < binArr.length; i++) {\n    let dec = 2 ** i;\n    decArr.push(dec);\n  }\n\n  let decVal = 0;\n\n  decArr.reverse().forEach((element, index) => {\n    decVal += binArr[index] === \"0\" ? 0 : element;\n  });\n\n  dispatch(setResult(decVal.toString()));\n  dispatch(setOps(\"result\"));\n};\n\nexport const handleActions = (val) => (dispatch) => {\n  switch (val) {\n    case \"AC\":\n      dispatch(clearValue());\n      break;\n    case \"=\":\n      console.log(useSelector(getValores));\n      dispatch(resultValue(val));\n      break;\n    default:\n      dispatch(setVal(val));\n    //   if (current === \"result\") {\n    //     dispatch(clearValue(\"\"));\n    //     dispatch(setOps(\"\"));\n    //     dispatch(setVal(val));\n    //   } else {\n    //     dispatch(setVal(val));\n    //   }\n  }\n};\n"],"mappings":"AAAA,SACEA,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,UAAU,EACVC,MAAM,QACD,2BAA2B;AAClC,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAO,MAAMC,WAAW,GAAIC,OAAO,IAAMC,QAAQ,IAAK;EACpD,IAAIC,MAAM,GAAGF,OAAO,CAACG,KAAK,CAAC,EAAE,CAAC;EAC9B,IAAIC,MAAM,GAAG,EAAE;EAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;IACtC,IAAIE,GAAG,GAAG,CAAC,IAAIF,CAAC;IAChBD,MAAM,CAACI,IAAI,CAACD,GAAG,CAAC;EAClB;EAEA,IAAIE,MAAM,GAAG,CAAC;EAEdL,MAAM,CAACM,OAAO,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;IAC3CJ,MAAM,IAAIP,MAAM,CAACW,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,GAAGD,OAAO;EAC/C,CAAC,CAAC;EAEFX,QAAQ,CAACP,SAAS,CAACe,MAAM,CAACK,QAAQ,CAAC,CAAC,CAAC,CAAC;EACtCb,QAAQ,CAACR,MAAM,CAAC,QAAQ,CAAC,CAAC;AAC5B,CAAC;AAED,OAAO,MAAMsB,aAAa,GAAIC,GAAG;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAAA,OAAAD,EAAA,CAAMhB,QAAQ,IAAK;IAAAgB,EAAA;IAClD,QAAQD,GAAG;MACT,KAAK,IAAI;QACPf,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;QACtB;MACF,KAAK,GAAG;QACNwB,OAAO,CAACC,GAAG,CAACtB,WAAW,CAACF,UAAU,CAAC,CAAC;QACpCK,QAAQ,CAACF,WAAW,CAACiB,GAAG,CAAC,CAAC;QAC1B;MACF;QACEf,QAAQ,CAACJ,MAAM,CAACmB,GAAG,CAAC,CAAC;MACvB;MACA;MACA;MACA;MACA;MACA;MACA;IACF;EACF,CAAC;IAAA,QAbiBlB,WAAW;EAAA;AAAA,CAa5B"},"metadata":{},"sourceType":"module","externalDependencies":[]}